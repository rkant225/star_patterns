{"version":3,"sources":["Components/RectangularPattern.js","Components/TriangularPattern.js","Components/HollowRectangularPattern.js","Components/HollowTriangularPattern.js","App.js","reportWebVitals.js","index.js"],"names":["RectangularPattern","useState","row","setRow","col","setCol","style","margin","border","padding","width","type","onChange","e","target","value","display","justifyContent","marginRight","pattern","i","j","getStarPattern","getPosition","TriangularPattern","triangleType","setTriangleType","inclideDots","setInclideDots","console","log","checked","emptySpace","HollowRectangularPattern","HollowTriangularPattern","App","flexWrap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78fd7db9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst RectangularPattern = () => {\r\n\r\n    const [row, setRow] = useState(10);\r\n    const [col, setCol] = useState(10);\r\n\r\n    const getStarPattern = () => {\r\n\r\n        let pattern = ``;\r\n        for(let i = 0; i<row; i++){\r\n            for(let j = 0; j<col; j++){\r\n                pattern = pattern + '* ';\r\n            }\r\n            pattern = pattern + '\\n';\r\n        }\r\n\r\n        return pattern;\r\n    };\r\n\r\n    const getPosition = () => {\r\n        let pattern = \"\";\r\n        for (let i = 0; i < row; i++) {\r\n          for (let j = 0; j < col; j++) {\r\n            pattern = pattern + `${i},${j}  `;\r\n          }\r\n          pattern = pattern + \"\\n\";\r\n        }\r\n    \r\n        return pattern;\r\n      };\r\n\r\n  return (\r\n    <div style={{margin : '1rem', border : '1px solid black', padding : '.5rem', width : 'max-content' }}>\r\n        <h3>RectangularPattern</h3>\r\n        <div>\r\n            <div>\r\n                Row : <input type=\"number\" onChange={(e)=>{setRow(e.target.value)}} value={row}/>\r\n            </div>\r\n            <div>\r\n                Col &nbsp;: <input type=\"number\" onChange={(e)=>{setCol(e.target.value)}} value={col}/>\r\n            </div>\r\n        </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <b style={{ marginRight: \"1rem\" }}>\r\n          <pre>{getStarPattern()}</pre>\r\n        </b>\r\n\r\n        <b>\r\n          <pre>{getPosition()}</pre>\r\n        </b>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RectangularPattern;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TriangularPattern = () => {\r\n\r\n    const [triangleType, setTriangleType] = useState('DIAGONAL-A');\r\n    const [row, setRow] = useState(10);\r\n    const [inclideDots, setInclideDots] = useState(true);\r\n\r\n    const getStarPattern = () => {\r\n\r\n        let pattern = ``;\r\n        let emptySpace = inclideDots ? '. ' : '  ';\r\n\r\n        if(triangleType === 'DIAGONAL-A'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i === j){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'DIAGONAL-B'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i+j === row-1){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'UPPER-RIGHT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i === j || j > i){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'UPPER-LEFT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i+j === row-1 || j+i < row-1){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'LOWER-RIGHT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i+j === row-1 || j+i > row-1){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'LOWER-LEFT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i === j || i > j){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        \r\n\r\n        return pattern;\r\n    };\r\n\r\n    const getPosition = () => {\r\n\r\n        let pattern = \"\";\r\n        for(let i = 0; i<row; i++){\r\n            for(let j = 0; j<row; j++){\r\n                 pattern = pattern + `${i},${j}  `\r\n            }\r\n            pattern = pattern + '\\n';\r\n        }\r\n\r\n        return pattern;\r\n    };\r\nconsole.log(triangleType)\r\n  return (\r\n    <div style={{margin : '1rem', border : '1px solid black', padding : '.5rem', width : 'max-content' }}>\r\n        <h3>TriangularPattern</h3>\r\n\r\n        <div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"DIAGONAL-A\" type=\"radio\" checked={triangleType === 'DIAGONAL-A'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    DIAGONAL-A\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"DIAGONAL-B\" type=\"radio\" checked={triangleType === 'DIAGONAL-B'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    DIAGONAL-B\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"UPPER-RIGHT\" type=\"radio\" checked={triangleType === 'UPPER-RIGHT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    UPPER-RIGHT\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"UPPER-LEFT\" type=\"radio\" checked={triangleType === 'UPPER-LEFT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    UPPER-LEFT\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"LOWER-RIGHT\" type=\"radio\" checked={triangleType === 'LOWER-RIGHT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    LOWER-RIGHT\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"LOWER-LEFT\" type=\"radio\" checked={triangleType === 'LOWER-LEFT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    LOWER-LEFT\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <div>\r\n                Row : <input type=\"number\" onChange={(e)=>{setRow(e.target.value)}} value={row}/>\r\n            </div>\r\n            <div> \r\n                Include dots (.) &nbsp;: <input type=\"checkbox\" checked={inclideDots} onChange={(e) => { setInclideDots(e.target.checked) }}/>\r\n            </div>\r\n        </div>\r\n      <div style={{display : 'flex', justifyContent : 'space-around'}}>\r\n        <b style={{marginRight : '1rem'}}>\r\n            <pre>{getStarPattern()}</pre>\r\n        </b>\r\n\r\n        <b>\r\n            <pre>{getPosition()}</pre>\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TriangularPattern;\r\n","import React, { useState } from \"react\";\r\n\r\nconst HollowRectangularPattern = () => {\r\n  const [row, setRow] = useState(10);\r\n  const [col, setCol] = useState(10);\r\n  const [inclideDots, setInclideDots] = useState(true);\r\n\r\n  const getStarPattern = () => {\r\n    let pattern = ``;\r\n    let emptySpace = inclideDots ? '. ' : '  ';\r\n\r\n    for (let i = 0; i < row; i++) {\r\n      for (let j = 0; j < col; j++) {\r\n        if(i===0 || j===0 || i === row-1 || j === col-1){\r\n            pattern = pattern + \"* \";\r\n        } else {\r\n            pattern = pattern + emptySpace;\r\n        }\r\n      }\r\n      pattern = pattern + \"\\n\";\r\n    }\r\n\r\n    return pattern;\r\n  };\r\n\r\n  const getPosition = () => {\r\n    let pattern = \"\";\r\n    for (let i = 0; i < row; i++) {\r\n      for (let j = 0; j < col; j++) {\r\n        pattern = pattern + `${i},${j}  `;\r\n      }\r\n      pattern = pattern + \"\\n\";\r\n    }\r\n\r\n    return pattern;\r\n  };\r\n  \r\n  return (\r\n    <div style={{ margin: \"1rem\", border: \"1px solid black\", padding: \".5rem\", width: \"max-content\", }} >\r\n      <h3>HollowRectangularPattern</h3>\r\n\r\n      <div>\r\n        <div>\r\n          Row : <input type=\"number\" onChange={(e) => { setRow(e.target.value); }} value={row} />\r\n        </div>\r\n        <div> \r\n            Col &nbsp;: <input type=\"number\" onChange={(e) => { setCol(e.target.value); }} value={col}/>\r\n        </div>\r\n        <div> \r\n            Include dots (.) &nbsp;: <input type=\"checkbox\" checked={inclideDots} onChange={(e) => { setInclideDots(e.target.checked) }}/>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <b style={{ marginRight: \"1rem\" }}>\r\n          <pre>{getStarPattern()}</pre>\r\n        </b>\r\n\r\n        <b>\r\n          <pre>{getPosition()}</pre>\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HollowRectangularPattern;\r\n","import React, { useState } from \"react\";\r\n\r\nconst HollowTriangularPattern = () => {\r\n\r\n    const [triangleType, setTriangleType] = useState('UPPER-RIGHT');\r\n    const [row, setRow] = useState(10);\r\n    const [inclideDots, setInclideDots] = useState(true);\r\n\r\n    const getStarPattern = () => {\r\n\r\n        let pattern = ``;\r\n        let emptySpace = inclideDots ? '. ' : '  ';\r\n\r\n        if(triangleType === 'UPPER-RIGHT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i === j || i === 0 || j === row-1){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'UPPER-LEFT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i+j === row-1 || j === 0 || i === 0){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'LOWER-RIGHT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i+j === row-1 || i === row-1 || j === row-1){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        if(triangleType === 'LOWER-LEFT'){\r\n            for(let i = 0; i<row; i++){\r\n                for(let j = 0; j<row; j++){\r\n                    if(i === j || j===0 || i===row-1){\r\n                        pattern = pattern + '* ';    \r\n                    } else {\r\n                        pattern = pattern + emptySpace;\r\n                    }\r\n                }\r\n                pattern = pattern + '\\n';\r\n            }\r\n        }\r\n        \r\n\r\n        return pattern;\r\n    };\r\n\r\n    const getPosition = () => {\r\n\r\n        let pattern = \"\";\r\n        for(let i = 0; i<row; i++){\r\n            for(let j = 0; j<row; j++){\r\n                 pattern = pattern + `${i},${j}  `\r\n            }\r\n            pattern = pattern + '\\n';\r\n        }\r\n\r\n        return pattern;\r\n    };\r\nconsole.log(triangleType)\r\n  return (\r\n    <div style={{margin : '1rem', border : '1px solid black', padding : '.5rem', width : 'max-content' }}>\r\n        <h3>HollowTriangularPattern</h3>\r\n\r\n        <div>\r\n            \r\n            <div>\r\n                <label>\r\n                    <input value=\"UPPER-RIGHT\" type=\"radio\" checked={triangleType === 'UPPER-RIGHT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    UPPER-RIGHT\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"UPPER-LEFT\" type=\"radio\" checked={triangleType === 'UPPER-LEFT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    UPPER-LEFT\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"LOWER-RIGHT\" type=\"radio\" checked={triangleType === 'LOWER-RIGHT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    LOWER-RIGHT\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input value=\"LOWER-LEFT\" type=\"radio\" checked={triangleType === 'LOWER-LEFT'} onChange={(e)=>{setTriangleType(e.target.value)}}/>\r\n                    LOWER-LEFT\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <div>\r\n                Row : <input type=\"number\" onChange={(e)=>{setRow(e.target.value)}} value={row}/>\r\n            </div>\r\n            <div> \r\n                Include dots (.) &nbsp;: <input type=\"checkbox\" checked={inclideDots} onChange={(e) => { setInclideDots(e.target.checked) }}/>\r\n            </div>\r\n        </div>\r\n      <div style={{display : 'flex', justifyContent : 'space-around'}}>\r\n        <b style={{marginRight : '1rem'}}>\r\n            <pre>{getStarPattern()}</pre>\r\n        </b>\r\n\r\n        <b>\r\n            <pre>{getPosition()}</pre>\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HollowTriangularPattern;\r\n","import './App.css';\nimport RectangularPattern from './Components/RectangularPattern';\nimport TriangularPattern from './Components/TriangularPattern';\nimport HollowRectangularPattern from './Components/HollowRectangularPattern';\nimport HollowTriangularPattern from './Components/HollowTriangularPattern';\n\nfunction App() {\n  return (\n    <div style={{display : 'flex', flexWrap : 'wrap', justifyContent : 'space-evenly'}}>\n      <RectangularPattern/>\n      <HollowRectangularPattern/>\n      <TriangularPattern/>\n      <HollowTriangularPattern/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}